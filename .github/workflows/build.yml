name: Build Docker Image

on:
  # 手动触发事件
  workflow_dispatch:
    inputs:
      tengineVersion:
        description: 'Tengine version'
        required: true
        default: '2.4.0'

env:
  REGISTRY: ghcr.io
  IMAGE: liziwl/tengine-proxy

jobs:
  build-and-push:
    name: "Build and push ghcr images"
    runs-on: ubuntu-latest
    permissions:
      # 这里用于定义 GITHUB_TOKEN 的权限
      packages: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 登录到 GitHub Packages 容器仓库
      # 注意 secrets.GITHUB_TOKEN 不需要手动添加，直接就可以用
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 根据输入自动生成 tag 和 label 等数据，说明见下
      - name: Extract metadata for Container
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE }}
          tags: ${{ github.event.inputs.tengineVersion }}

      # 构建并上传
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: false
          sbom: false
          build-args: |
            VER=${{ github.event.inputs.tengineVersion }}

      - name: Inspect image
        run: |
          docker buildx imagetools inspect \
          ${{ env.REGISTRY }}/${{ env.IMAGE }}:${{ steps.meta.outputs.version }}

  clean-untagged-images:
    name: "Clean untagged images"
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Delete all containers from repository without tags
        continue-on-error: true
        uses: Chizkiyahu/delete-untagged-ghcr-action@v2
        with:
            token: ${{ secrets.PAT_TOKEN }}
            repository_owner: ${{ github.repository_owner }}
            repository: ${{ github.repository }}
            untagged_only: true
            owner_type: user
